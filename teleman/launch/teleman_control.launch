<?xml version="1.0" ?>
<launch>
<!--
    <node pkg="hannes_hand" type="hannes_controller" name="hannes_controller" output="screen">
      <param name="port" value="/dev/ttyUSB0" />
      <param name="baudrate" value="B115200" />
    </node>
-->
    <group ns="teleman">
        <arg name="robot_ip" default="192.168.1.10"/>
        <arg name="arm_id" default="teleman_panda" />
        <arg name="load_gripper" default="false" />
        <arg name="controller" default="cartesian_impedance_example_controller" />
        <arg name="mode"  default="marker"  doc="VR topic teleop or interactive marker test mode? (topic or marker)" />
        <arg name="sim"  default="true"     doc="simulation or real? (sim: true or false)" />

        <param name="robot_description" command="$(find xacro)/xacro $(find franka_description)/robots/panda_arm.urdf.xacro hand:=$(arg load_gripper) arm_id:=$(arg arm_id)" />
        <rosparam command="load" file="$(find franka_control)/config/default_controllers.yaml" subst_value="true" />
        <rosparam command="load" file="$(find franka_example_controllers)/config/franka_example_controllers.yaml" />

        <node name="franka_control" pkg="franka_control" type="franka_control_node" output="screen" required="true">
          <rosparam command="load" file="$(find franka_control)/config/franka_control_node.yaml" subst_value="true" />
          <param name="robot_ip" value="$(arg robot_ip)" />
        </node>

        <node name="state_controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="franka_state_controller cartesian_impedance_example_controller"/>

        <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" output="screen"/>

        <node name="joint_state_publisher" type="joint_state_publisher" pkg="joint_state_publisher" output="screen">
          <rosparam param="source_list">[franka_state_controller/joint_states] </rosparam>
          <param name="rate" value="30"/>
        </node>


        <!-- run for both real robot and gazebo simulation-->
        <node name="rviz"  pkg="rviz" type="rviz" output="screen" args="-d $(find franka_example_controllers)/launch/rviz/teleman_franka_description_with_marker.rviz"/>

        <node name="robot_telemanipulation" pkg="teleman" type="telemanipulation.py" if="$(eval arg('mode') == 'topic')" required="true" output="screen" >
          <param name="link_name" value="teleman_panda_link0" />
          <remap to="cartesian_impedance_example_controller/equilibrium_pose" from="equilibrium_pose" />
        </node>

        <node name="interactive_marker" pkg="franka_example_controllers" type="interactive_marker.py" required="true" output="screen" if="$(eval arg('mode') == 'marker')">
          <param name="link_name" value="teleman_panda_link0" />
          <remap from="equilibrium_pose" to="/teleman/cartesian_impedance_example_controller/equilibrium_pose" />
        </node>

        <node name="rqt_reconfigure" pkg="rqt_reconfigure" type="rqt_reconfigure" required="false"/>

    </group>
</launch>